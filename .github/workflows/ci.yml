name: CI

on: [push, pull_request]

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: chartboost/ruff-action@v1
        with:
          version: 0.9.6

      - uses: chartboost/ruff-action@v1
        with:
          version: 0.9.6
          args: "format --check"

  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.2"

      - name: Install Requirements
        run: uv pip install --system .[aioredis,tests]

      - name: Run Pylint
        run: pylint aiohttp_msal

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.2"

      - name: Install Requirements
        run: uv pip install --system .[aioredis,tests]

      - name: Run mypy
        run: mypy --install-types --non-interactive aiohttp_msal/

  pytest:
    name: Run tests Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    needs:
      - ruff
      - pylint
      - mypy
    env:
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.2"

      - name: Install Requirements
        run: uv pip install --system .[aioredis,tests]

      - name: Run tests and generate coverage report
        run: pytest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: PYTHON
          verbose: true

  build-n-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    needs:
      - pytest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.2"

      - name: Build a binary wheel and a source tarball
        run: uv build

      - name: Publish distribution üì¶ to PyPI
        run: uv publish -t ${{ secrets.PYPI_API_TOKEN }}
      #   uses: pypa/gh-action-pypi-publish@release/v1

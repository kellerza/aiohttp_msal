name: CI

on: [push, pull_request]

env:
  DEFAULT_PYTHON: "3.9"

jobs:
  black:
    name: Check black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - uses: psf/black@23.9.1

  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: chartboost/ruff-action@v1

  mypy:
    name: Check mypy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Install Requirements
        run: |
          pip install mypy .
      - name: Run mypy
        run: |
          mypy --install-types --non-interactive aiohttp_msal/

  pytest:
    name: Run tests Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    needs:
      - black
      - isort
      - flake8
      - pylint
      - mypy
    env:
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run tests and generate coverage report
        run: |
          pip install ".[redis,tests]"
          pytest --cov=./aiohttp_msal --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: PYTHON
          verbose: true

  build-n-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    needs:
      - pytest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Install pypa/build
        run: python -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python -m build --sdist --wheel --outdir dist/ .
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
